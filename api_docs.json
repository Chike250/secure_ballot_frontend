{
    "openapi": "3.0.3",
    "info": {
      "title": "Nigeria E-Voting API",
      "description": "A secure API for the Nigerian hybrid encryption-based voting system with USSD integration",
      "version": "1.0.0",
      "contact": {
        "name": "Nigeria Electoral Commission",
        "url": "https://evoting.gov.ng",
        "email": "support@evoting.gov.ng"
      },
      "license": {
        "name": "Proprietary",
        "url": "https://evoting.gov.ng/license"
      }
    },
    "servers": [
      {
        "url": "http://localhost:8080",
        "description": "Development Server"
      }
    ],
    "components": {
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "description": "JWT token obtained from login endpoint"
        }
      },
      "schemas": {
        "Error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "details": {
              "type": "object"
            }
          }
        },
        "AdminUser": {
          "type": "object",
          "required": [
            "email",
            "fullName",
            "phoneNumber",
            "role"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Admin user unique identifier",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Admin email address",
              "example": "admin@securevote.com"
            },
            "fullName": {
              "type": "string",
              "description": "Full name of the admin",
              "example": "John Admin"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone number",
              "example": "+2348012345678"
            },
            "role": {
              "type": "string",
              "enum": [
                "SystemAdministrator",
                "ElectoralCommissioner",
                "SecurityOfficer",
                "SystemAuditor",
                "RegionalElectoralOfficer",
                "ElectionManager",
                "ResultVerificationOfficer"
              ],
              "description": "Admin role",
              "example": "ElectoralCommissioner"
            },
            "isActive": {
              "type": "boolean",
              "description": "Whether the admin is active",
              "example": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp",
              "example": "2023-01-15T10:30:00Z"
            },
            "lastLogin": {
              "type": "string",
              "format": "date-time",
              "description": "Last login timestamp",
              "example": "2023-01-20T14:45:00Z"
            }
          }
        },
        "AdminUserCreate": {
          "type": "object",
          "required": [
            "email",
            "fullName",
            "phoneNumber",
            "password",
            "role"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "description": "Admin email address",
              "example": "admin@securevote.com"
            },
            "fullName": {
              "type": "string",
              "description": "Full name of the admin",
              "example": "John Admin"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone number",
              "example": "+2348012345678"
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "Admin password",
              "example": "SecurePass123!"
            },
            "role": {
              "type": "string",
              "enum": [
                "SystemAdministrator",
                "ElectoralCommissioner",
                "SecurityOfficer",
                "SystemAuditor",
                "RegionalElectoralOfficer",
                "ElectionManager",
                "ResultVerificationOfficer"
              ],
              "description": "Admin role",
              "example": "ElectoralCommissioner"
            }
          }
        },
        "PollingUnit": {
          "type": "object",
          "required": [
            "pollingUnitName",
            "pollingUnitCode",
            "address",
            "state",
            "lga",
            "ward"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Polling unit unique identifier",
              "example": "p1u2n3i4-t5a6-7890-abcd-ef1234567890"
            },
            "pollingUnitName": {
              "type": "string",
              "description": "Name of the polling unit",
              "example": "Central Primary School"
            },
            "pollingUnitCode": {
              "type": "string",
              "description": "Unique code for the polling unit",
              "example": "PU001"
            },
            "address": {
              "type": "string",
              "description": "Physical address",
              "example": "123 Main Street, Victoria Island"
            },
            "state": {
              "type": "string",
              "description": "State location",
              "example": "Lagos"
            },
            "lga": {
              "type": "string",
              "description": "Local Government Area",
              "example": "Ikeja"
            },
            "ward": {
              "type": "string",
              "description": "Ward within the LGA",
              "example": "Ward 1"
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "description": "GPS latitude",
              "example": 6.4281
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "description": "GPS longitude",
              "example": 3.4219
            },
            "registeredVoters": {
              "type": "integer",
              "description": "Number of registered voters",
              "example": 1500
            },
            "assignedOfficer": {
              "type": "string",
              "format": "uuid",
              "description": "ID of assigned officer",
              "example": "o1f2f3i4-c5e6-7890-abcd-ef1234567890"
            },
            "isActive": {
              "type": "boolean",
              "description": "Whether the polling unit is active",
              "example": true
            }
          }
        },
        "VerificationRequest": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Verification request ID",
              "example": "v1e2r3i4-f5y6-7890-abcd-ef1234567890"
            },
            "userId": {
              "type": "string",
              "format": "uuid",
              "description": "Voter ID",
              "example": "u1s2e3r4-i5d6-7890-abcd-ef1234567890"
            },
            "voterName": {
              "type": "string",
              "description": "Voter's full name",
              "example": "Jane Doe"
            },
            "nin": {
              "type": "string",
              "description": "National Identification Number",
              "example": "12345678901"
            },
            "vin": {
              "type": "string",
              "description": "Voter Identification Number",
              "example": "1234567890123456789"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone number",
              "example": "+2348012345678"
            },
            "status": {
              "type": "string",
              "enum": [
                "pending",
                "approved",
                "rejected"
              ],
              "description": "Verification status",
              "example": "pending"
            },
            "submittedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Submission timestamp",
              "example": "2023-01-15T10:30:00Z"
            }
          }
        },
        "AuditLog": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Audit log entry ID",
              "example": "a1u2d3i4-t5l6-7890-abcd-ef1234567890"
            },
            "userId": {
              "type": "string",
              "format": "uuid",
              "description": "User who performed the action",
              "example": "u1s2e3r4-i5d6-7890-abcd-ef1234567890"
            },
            "actionType": {
              "type": "string",
              "description": "Type of action performed",
              "example": "VOTE_CAST"
            },
            "actionTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "When the action occurred",
              "example": "2023-01-15T10:30:00Z"
            },
            "ipAddress": {
              "type": "string",
              "description": "IP address of the user",
              "example": "192.168.1.100"
            },
            "userAgent": {
              "type": "string",
              "description": "User agent string",
              "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
            },
            "actionDetails": {
              "type": "object",
              "description": "Additional details about the action"
            },
            "isSuspicious": {
              "type": "boolean",
              "description": "Whether the action is flagged as suspicious",
              "example": false
            }
          }
        },
        "UserCredentials": {
          "type": "object",
          "required": [
            "identifier",
            "password"
          ],
          "properties": {
            "identifier": {
              "type": "string",
              "description": "NIN, VIN, or phone number",
              "example": "12345678901"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "securepassword123"
            }
          }
        },
        "AdminCredentials": {
          "type": "object",
          "required": [
            "nin",
            "password"
          ],
          "properties": {
            "nin": {
              "type": "string",
              "description": "National Identification Number",
              "example": "12345678901"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "adminSecurePass123"
            }
          }
        },
        "VoterRegistration": {
          "type": "object",
          "required": [
            "nin",
            "vin",
            "phoneNumber",
            "dateOfBirth",
            "password",
            "fullName",
            "pollingUnitCode",
            "state",
            "gender",
            "lga",
            "ward"
          ],
          "properties": {
            "nin": {
              "type": "string",
              "description": "11-character National Identification Number",
              "example": "12345678901"
            },
            "vin": {
              "type": "string",
              "description": "19-character Voter Identification Number",
              "example": "1234567890123456789"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone number for MFA",
              "example": "+2348012345678"
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "description": "Date of birth for verification",
              "example": "1990-01-01"
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "User password",
              "example": "securepassword123"
            },
            "fullName": {
              "type": "string",
              "description": "Full name of the voter",
              "example": "John Doe"
            },
            "pollingUnitCode": {
              "type": "string",
              "description": "Assigned polling unit code",
              "example": "PU001"
            },
            "state": {
              "type": "string",
              "description": "State of residence",
              "example": "Lagos"
            },
            "gender": {
              "type": "string",
              "enum": [
                "male",
                "female"
              ],
              "description": "Gender of the voter",
              "example": "male"
            },
            "lga": {
              "type": "string",
              "description": "Local Government Area",
              "example": "Ikeja"
            },
            "ward": {
              "type": "string",
              "description": "Ward within the LGA",
              "example": "Ward 1"
            }
          }
        },
        "MfaVerification": {
          "type": "object",
          "required": [
            "userId",
            "token"
          ],
          "properties": {
            "userId": {
              "type": "string",
              "format": "uuid",
              "description": "User ID",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            },
            "token": {
              "type": "string",
              "description": "6-digit MFA token",
              "example": "123456"
            }
          }
        },
        "ForgotPassword": {
          "type": "object",
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "description": "Registered email for password reset",
              "example": "user@example.com"
            }
          }
        },
        "ResetPassword": {
          "type": "object",
          "required": [
            "token",
            "newPassword"
          ],
          "properties": {
            "token": {
              "type": "string",
              "description": "Password reset token",
              "example": "a1b2c3d4e5f67890abcdef1234567890"
            },
            "newPassword": {
              "type": "string",
              "format": "password",
              "description": "New password",
              "example": "newSecurePass123"
            }
          }
        },
        "LoginResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "message": {
              "type": "string",
              "example": "Login successful"
            },
            "data": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjEyMzQ1Njc4OTAiLCJyb2xlIjoidm90ZXIiLCJpYXQiOjE2NTA5ODExMjksImV4cCI6MTY1MDk4NDcyOX0.DVI9S5pZ5EWTnO3vCsfl4xOFLVeYs"
                },
                "voter": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
                    },
                    "nin": {
                      "type": "string",
                      "example": "12345678901"
                    },
                    "vin": {
                      "type": "string",
                      "example": "1234567890123456789"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "example": "+2348012345678"
                    }
                  }
                },
                "requiresMfa": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        },
        "ErrorResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "code": {
              "type": "string",
              "example": "VALIDATION_ERROR",
              "description": "Error code for programmatic handling"
            },
            "message": {
              "type": "string",
              "example": "Invalid credentials"
            },
            "error": {
              "type": "string",
              "description": "Error message",
              "example": "Invalid input data"
            },
            "details": {
              "type": "object",
              "description": "Additional error details",
              "example": {
                "field": "email",
                "message": "Invalid email format"
              }
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Error timestamp",
              "example": "2023-02-25T10:30:00Z"
            }
          }
        },
        "SuccessResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "message": {
              "type": "string",
              "description": "Success message",
              "example": "Operation completed successfully"
            },
            "data": {
              "type": "object",
              "description": "Response data"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Response timestamp",
              "example": "2023-02-25T10:30:00Z"
            }
          }
        },
        "PaginationMeta": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "description": "Current page number",
              "example": 1
            },
            "limit": {
              "type": "integer",
              "description": "Items per page",
              "example": 20
            },
            "total": {
              "type": "integer",
              "description": "Total number of items",
              "example": 100
            },
            "totalPages": {
              "type": "integer",
              "description": "Total number of pages",
              "example": 5
            },
            "hasNext": {
              "type": "boolean",
              "description": "Whether there are more pages",
              "example": true
            },
            "hasPrev": {
              "type": "boolean",
              "description": "Whether there are previous pages",
              "example": false
            }
          }
        },
        "ValidationError": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "error": {
              "type": "string",
              "example": "Validation failed"
            },
            "code": {
              "type": "string",
              "example": "VALIDATION_ERROR"
            },
            "validationErrors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "example": "email"
                  },
                  "message": {
                    "type": "string",
                    "example": "Email is required"
                  },
                  "value": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "example": "2023-02-25T10:30:00Z"
            }
          }
        },
        "UnauthorizedError": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "error": {
              "type": "string",
              "example": "Unauthorized access"
            },
            "code": {
              "type": "string",
              "example": "UNAUTHORIZED"
            },
            "message": {
              "type": "string",
              "example": "Invalid or expired authentication token"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "example": "2023-02-25T10:30:00Z"
            }
          }
        },
        "ForbiddenError": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "error": {
              "type": "string",
              "example": "Forbidden"
            },
            "code": {
              "type": "string",
              "example": "FORBIDDEN"
            },
            "message": {
              "type": "string",
              "example": "Insufficient permissions to access this resource"
            },
            "requiredRole": {
              "type": "string",
              "example": "SystemAdministrator"
            },
            "userRole": {
              "type": "string",
              "example": "ElectoralCommissioner"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "example": "2023-02-25T10:30:00Z"
            }
          }
        },
        "NotFoundError": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "error": {
              "type": "string",
              "example": "Resource not found"
            },
            "code": {
              "type": "string",
              "example": "NOT_FOUND"
            },
            "message": {
              "type": "string",
              "example": "The requested resource could not be found"
            },
            "resourceType": {
              "type": "string",
              "example": "Election"
            },
            "resourceId": {
              "type": "string",
              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "example": "2023-02-25T10:30:00Z"
            }
          }
        },
        "ConflictError": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "error": {
              "type": "string",
              "example": "Resource conflict"
            },
            "code": {
              "type": "string",
              "example": "CONFLICT"
            },
            "message": {
              "type": "string",
              "example": "A resource with this identifier already exists"
            },
            "conflictField": {
              "type": "string",
              "example": "email"
            },
            "conflictValue": {
              "type": "string",
              "example": "user@example.com"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "example": "2023-02-25T10:30:00Z"
            }
          }
        },
        "ServerError": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "error": {
              "type": "string",
              "example": "Internal server error"
            },
            "code": {
              "type": "string",
              "example": "INTERNAL_ERROR"
            },
            "message": {
              "type": "string",
              "example": "An unexpected error occurred while processing your request"
            },
            "requestId": {
              "type": "string",
              "example": "req_1234567890abcdef"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "example": "2023-02-25T10:30:00Z"
            }
          }
        },
        "Election": {
          "type": "object",
          "required": [
            "name",
            "description",
            "startDate",
            "endDate",
            "type"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Election unique identifier",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            },
            "name": {
              "type": "string",
              "description": "Election name",
              "example": "Presidential Election 2023"
            },
            "description": {
              "type": "string",
              "description": "Detailed description",
              "example": "Nigeria Presidential Election for 2023"
            },
            "startDate": {
              "type": "string",
              "format": "date-time",
              "description": "Start date and time",
              "example": "2023-02-25T08:00:00Z"
            },
            "endDate": {
              "type": "string",
              "format": "date-time",
              "description": "End date and time",
              "example": "2023-02-25T18:00:00Z"
            },
            "type": {
              "type": "string",
              "enum": [
                "presidential",
                "gubernatorial",
                "senate",
                "house",
                "local"
              ],
              "description": "Type of election",
              "example": "presidential"
            },
            "status": {
              "type": "string",
              "enum": [
                "draft",
                "scheduled",
                "active",
                "completed",
                "cancelled"
              ],
              "description": "Current status",
              "example": "scheduled"
            },
            "createdBy": {
              "type": "string",
              "format": "uuid",
              "description": "Admin who created the election",
              "example": "b2c3d4e5-f6a7-8901-bcde-f1234567890a"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp",
              "example": "2023-01-15T10:30:00Z"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last update timestamp",
              "example": "2023-01-20T14:45:00Z"
            }
          }
        },
        "Candidate": {
          "type": "object",
          "required": [
            "name",
            "party",
            "electionId"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Candidate unique identifier",
              "example": "c3d4e5f6-a7b8-9012-cdef-g1234567890h"
            },
            "name": {
              "type": "string",
              "description": "Candidate full name",
              "example": "John Doe"
            },
            "party": {
              "type": "string",
              "description": "Political party",
              "example": "National Democratic Party"
            },
            "image": {
              "type": "string",
              "description": "URL to candidate photo",
              "example": "https://example.com/images/candidates/john_doe.jpg"
            },
            "bio": {
              "type": "string",
              "description": "Brief biography",
              "example": "John Doe is a seasoned politician with 20 years of public service."
            },
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "Associated election ID",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            }
          }
        },
        "ElectionResults": {
          "type": "object",
          "properties": {
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "Election ID",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            },
            "electionName": {
              "type": "string",
              "description": "Election name",
              "example": "Presidential Election 2023"
            },
            "totalVotes": {
              "type": "integer",
              "description": "Total votes cast",
              "example": 15000000
            },
            "candidates": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c3d4e5f6-a7b8-9012-cdef-g1234567890h"
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "party": {
                    "type": "string",
                    "example": "National Democratic Party"
                  },
                  "votes": {
                    "type": "integer",
                    "example": 8500000
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "example": 56.67
                  }
                }
              }
            }
          }
        },
        "MobileLogin": {
          "type": "object",
          "required": [
            "nin",
            "vin",
            "password",
            "deviceInfo"
          ],
          "properties": {
            "nin": {
              "type": "string",
              "description": "11-character National Identification Number",
              "example": "12345678901"
            },
            "vin": {
              "type": "string",
              "description": "19-character Voter Identification Number",
              "example": "1234567890123456789"
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "User password",
              "example": "securepassword123"
            },
            "deviceInfo": {
              "type": "object",
              "required": [
                "deviceId",
                "deviceModel",
                "osVersion",
                "appVersion"
              ],
              "properties": {
                "deviceId": {
                  "type": "string",
                  "description": "Unique device identifier",
                  "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
                },
                "deviceModel": {
                  "type": "string",
                  "description": "Model of the device",
                  "example": "Samsung Galaxy S21"
                },
                "osVersion": {
                  "type": "string",
                  "description": "Operating system version",
                  "example": "Android 13.0"
                },
                "appVersion": {
                  "type": "string",
                  "description": "Mobile app version",
                  "example": "1.2.0"
                }
              }
            }
          }
        },
        "DeviceVerification": {
          "type": "object",
          "required": [
            "deviceId",
            "verificationCode"
          ],
          "properties": {
            "deviceId": {
              "type": "string",
              "description": "Unique device identifier",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            },
            "verificationCode": {
              "type": "string",
              "description": "6-digit verification code",
              "example": "123456"
            }
          }
        },
        "OfflineVote": {
          "type": "object",
          "required": [
            "electionId",
            "candidateId",
            "signature",
            "timestamp"
          ],
          "properties": {
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the election",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            },
            "candidateId": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the candidate",
              "example": "b2c3d4e5-f6a7-8901-bcde-f1234567890a"
            },
            "signature": {
              "type": "string",
              "description": "Digital signature of the vote",
              "example": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe..."
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Time when the vote was cast",
              "example": "2023-06-01T12:35:00Z"
            }
          }
        },
        "OfflineVoteSubmission": {
          "type": "object",
          "required": [
            "electionId",
            "votes",
            "deviceId"
          ],
          "properties": {
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the election",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            },
            "votes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OfflineVote"
              }
            },
            "deviceId": {
              "type": "string",
              "description": "Unique device identifier",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            }
          }
        },
        "ElectionStatistics": {
          "type": "object",
          "properties": {
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "Election unique identifier",
              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
            },
            "electionName": {
              "type": "string",
              "description": "Name of the election",
              "example": "Presidential Election 2023"
            },
            "electionType": {
              "type": "string",
              "description": "Type of election",
              "example": "Presidential"
            },
            "status": {
              "type": "string",
              "enum": [
                "draft",
                "scheduled",
                "active",
                "completed",
                "cancelled"
              ],
              "description": "Current election status",
              "example": "completed"
            },
            "totalRegisteredVoters": {
              "type": "integer",
              "description": "Total number of registered voters",
              "example": 95000000
            },
            "totalVotesCast": {
              "type": "integer",
              "description": "Total number of votes cast",
              "example": 28000000
            },
            "turnoutPercentage": {
              "type": "number",
              "format": "float",
              "description": "Voter turnout percentage",
              "example": 29.47
            },
            "validVotes": {
              "type": "integer",
              "description": "Number of valid votes",
              "example": 27500000
            },
            "invalidVotes": {
              "type": "integer",
              "description": "Number of invalid votes",
              "example": 500000
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Last update timestamp",
              "example": "2023-02-25T20:30:00Z"
            },
            "candidateResults": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "candidateId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c1a2n3d4-i5d6-7890-abcd-ef1234567890"
                  },
                  "candidateName": {
                    "type": "string",
                    "example": "John Presidential Candidate"
                  },
                  "partyName": {
                    "type": "string",
                    "example": "All Progressives Congress"
                  },
                  "partyCode": {
                    "type": "string",
                    "example": "APC"
                  },
                  "votes": {
                    "type": "integer",
                    "example": 15000000
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "example": 54.55
                  },
                  "position": {
                    "type": "integer",
                    "description": "Ranking position (1st, 2nd, etc.)",
                    "example": 1
                  }
                }
              }
            },
            "regionalBreakdown": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "state": {
                    "type": "string",
                    "example": "Lagos"
                  },
                  "registeredVoters": {
                    "type": "integer",
                    "example": 7000000
                  },
                  "votesCast": {
                    "type": "integer",
                    "example": 2500000
                  },
                  "turnoutPercentage": {
                    "type": "number",
                    "format": "float",
                    "example": 35.71
                  },
                  "leadingCandidate": {
                    "type": "string",
                    "example": "John Presidential Candidate"
                  },
                  "leadingParty": {
                    "type": "string",
                    "example": "APC"
                  }
                }
              }
            }
          }
        },
        "RealTimeUpdate": {
          "type": "object",
          "properties": {
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "Election ID",
              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Update timestamp",
              "example": "2023-02-25T15:30:00Z"
            },
            "totalVotesCast": {
              "type": "integer",
              "description": "Current total votes cast",
              "example": 15000000
            },
            "turnoutPercentage": {
              "type": "number",
              "format": "float",
              "description": "Current turnout percentage",
              "example": 15.79
            },
            "pollingUnitsReported": {
              "type": "integer",
              "description": "Number of polling units that have reported",
              "example": 75000
            },
            "totalPollingUnits": {
              "type": "integer",
              "description": "Total number of polling units",
              "example": 176000
            },
            "reportingPercentage": {
              "type": "number",
              "format": "float",
              "description": "Percentage of polling units reported",
              "example": 42.61
            },
            "leadingCandidate": {
              "type": "object",
              "properties": {
                "candidateId": {
                  "type": "string",
                  "format": "uuid",
                  "example": "c1a2n3d4-i5d6-7890-abcd-ef1234567890"
                },
                "candidateName": {
                  "type": "string",
                  "example": "John Presidential Candidate"
                },
                "partyName": {
                  "type": "string",
                  "example": "All Progressives Congress"
                },
                "votes": {
                  "type": "integer",
                  "example": 8500000
                },
                "percentage": {
                  "type": "number",
                  "format": "float",
                  "example": 56.67
                }
              }
            },
            "recentUpdates": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pollingUnitCode": {
                    "type": "string",
                    "example": "PU001"
                  },
                  "pollingUnitName": {
                    "type": "string",
                    "example": "Central Primary School"
                  },
                  "state": {
                    "type": "string",
                    "example": "Lagos"
                  },
                  "votesCast": {
                    "type": "integer",
                    "example": 1500
                  },
                  "reportedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-02-25T15:25:00Z"
                  }
                }
              }
            }
          }
        },
        "RegionalStatistics": {
          "type": "object",
          "properties": {
            "region": {
              "type": "string",
              "description": "Region name (state/zone)",
              "example": "Lagos State"
            },
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "Election ID",
              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
            },
            "totalPollingUnits": {
              "type": "integer",
              "description": "Total polling units in region",
              "example": 8500
            },
            "reportedPollingUnits": {
              "type": "integer",
              "description": "Polling units that have reported",
              "example": 7200
            },
            "reportingPercentage": {
              "type": "number",
              "format": "float",
              "description": "Percentage of units reported",
              "example": 84.71
            },
            "registeredVoters": {
              "type": "integer",
              "description": "Total registered voters in region",
              "example": 7000000
            },
            "votesCast": {
              "type": "integer",
              "description": "Total votes cast in region",
              "example": 2500000
            },
            "turnoutPercentage": {
              "type": "number",
              "format": "float",
              "description": "Voter turnout percentage",
              "example": 35.71
            },
            "candidateResults": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "candidateId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c1a2n3d4-i5d6-7890-abcd-ef1234567890"
                  },
                  "candidateName": {
                    "type": "string",
                    "example": "John Presidential Candidate"
                  },
                  "partyName": {
                    "type": "string",
                    "example": "All Progressives Congress"
                  },
                  "votes": {
                    "type": "integer",
                    "example": 1400000
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "example": 56
                  }
                }
              }
            },
            "lgaBreakdown": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lga": {
                    "type": "string",
                    "example": "Ikeja"
                  },
                  "pollingUnits": {
                    "type": "integer",
                    "example": 250
                  },
                  "registeredVoters": {
                    "type": "integer",
                    "example": 300000
                  },
                  "votesCast": {
                    "type": "integer",
                    "example": 120000
                  },
                  "turnoutPercentage": {
                    "type": "number",
                    "format": "float",
                    "example": 40
                  },
                  "leadingCandidate": {
                    "type": "string",
                    "example": "John Presidential Candidate"
                  }
                }
              }
            }
          }
        },
        "UssdAuthentication": {
          "type": "object",
          "required": [
            "nin",
            "vin",
            "phoneNumber"
          ],
          "properties": {
            "nin": {
              "type": "string",
              "description": "11-character National Identification Number",
              "example": "12345678901"
            },
            "vin": {
              "type": "string",
              "description": "19-character Voter Identification Number",
              "example": "1234567890123456789"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Registered phone number",
              "example": "+2348012345678"
            }
          }
        },
        "UssdVote": {
          "type": "object",
          "required": [
            "sessionCode",
            "electionId",
            "candidateId"
          ],
          "properties": {
            "sessionCode": {
              "type": "string",
              "description": "Temporary session code for USSD voting",
              "example": "123456"
            },
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the election",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            },
            "candidateId": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the candidate",
              "example": "b2c3d4e5-f6a7-8901-bcde-f1234567890a"
            }
          }
        },
        "UssdVoteVerification": {
          "type": "object",
          "required": [
            "receiptCode",
            "phoneNumber"
          ],
          "properties": {
            "receiptCode": {
              "type": "string",
              "description": "Vote receipt code",
              "example": "a1b2c3d4e5f6g7h8"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Registered phone number",
              "example": "+2348012345678"
            }
          }
        },
        "VoterProfile": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Voter unique identifier",
              "example": "v1o2t3e4-r5i6-7890-abcd-ef1234567890"
            },
            "nin": {
              "type": "string",
              "description": "National Identification Number",
              "example": "12345678901"
            },
            "vin": {
              "type": "string",
              "description": "Voter Identification Number",
              "example": "1234567890123456789"
            },
            "fullName": {
              "type": "string",
              "description": "Full name of the voter",
              "example": "Jane Doe"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Phone number",
              "example": "+2348012345678"
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "description": "Date of birth",
              "example": "1990-01-01"
            },
            "gender": {
              "type": "string",
              "enum": [
                "Male",
                "Female",
                "Other"
              ],
              "description": "Gender",
              "example": "Female"
            },
            "state": {
              "type": "string",
              "description": "State of residence",
              "example": "Lagos"
            },
            "lga": {
              "type": "string",
              "description": "Local Government Area",
              "example": "Ikeja"
            },
            "ward": {
              "type": "string",
              "description": "Ward",
              "example": "Ward 1"
            },
            "pollingUnitCode": {
              "type": "string",
              "description": "Assigned polling unit code",
              "example": "PU001"
            },
            "isVerified": {
              "type": "boolean",
              "description": "Whether the voter is verified",
              "example": true
            },
            "isActive": {
              "type": "boolean",
              "description": "Whether the voter account is active",
              "example": true
            },
            "registrationDate": {
              "type": "string",
              "format": "date-time",
              "description": "Registration timestamp",
              "example": "2023-01-15T10:30:00Z"
            },
            "lastLogin": {
              "type": "string",
              "format": "date-time",
              "description": "Last login timestamp",
              "example": "2023-01-20T14:45:00Z"
            }
          }
        },
        "VoterUpdate": {
          "type": "object",
          "properties": {
            "phoneNumber": {
              "type": "string",
              "description": "Updated phone number",
              "example": "+2348012345679"
            },
            "state": {
              "type": "string",
              "description": "Updated state of residence",
              "example": "Abuja"
            },
            "lga": {
              "type": "string",
              "description": "Updated Local Government Area",
              "example": "Garki"
            },
            "ward": {
              "type": "string",
              "description": "Updated ward",
              "example": "Ward 2"
            }
          }
        },
        "VoteHistory": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Vote record ID",
              "example": "v1o2t3e4-h5i6-7890-abcd-ef1234567890"
            },
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "Election ID",
              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
            },
            "electionName": {
              "type": "string",
              "description": "Name of the election",
              "example": "Presidential Election 2023"
            },
            "electionType": {
              "type": "string",
              "description": "Type of election",
              "example": "Presidential"
            },
            "voteTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "When the vote was cast",
              "example": "2023-02-25T10:30:00Z"
            },
            "receiptCode": {
              "type": "string",
              "description": "Vote receipt code for verification",
              "example": "VRC-2023-ABC123"
            },
            "pollingUnit": {
              "type": "string",
              "description": "Polling unit where vote was cast",
              "example": "Central Primary School"
            },
            "voteSource": {
              "type": "string",
              "enum": [
                "web",
                "mobile",
                "ussd",
                "offline"
              ],
              "description": "How the vote was cast",
              "example": "mobile"
            },
            "isVerified": {
              "type": "boolean",
              "description": "Whether the vote has been verified",
              "example": true
            }
          }
        },
        "PollingUnitInfo": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Polling unit ID",
              "example": "p1u2n3i4-t5a6-7890-abcd-ef1234567890"
            },
            "pollingUnitName": {
              "type": "string",
              "description": "Name of the polling unit",
              "example": "Central Primary School"
            },
            "pollingUnitCode": {
              "type": "string",
              "description": "Unique code for the polling unit",
              "example": "PU001"
            },
            "address": {
              "type": "string",
              "description": "Physical address",
              "example": "123 Main Street, Victoria Island"
            },
            "state": {
              "type": "string",
              "description": "State location",
              "example": "Lagos"
            },
            "lga": {
              "type": "string",
              "description": "Local Government Area",
              "example": "Ikeja"
            },
            "ward": {
              "type": "string",
              "description": "Ward within the LGA",
              "example": "Ward 1"
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "description": "GPS latitude",
              "example": 6.4281
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "description": "GPS longitude",
              "example": 3.4219
            },
            "registeredVoters": {
              "type": "integer",
              "description": "Number of registered voters",
              "example": 1500
            },
            "operatingHours": {
              "type": "object",
              "properties": {
                "open": {
                  "type": "string",
                  "example": "08:00"
                },
                "close": {
                  "type": "string",
                  "example": "18:00"
                }
              }
            },
            "facilities": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "wheelchair_accessible",
                "parking",
                "restrooms"
              ]
            }
          }
        },
        "VoteReceipt": {
          "type": "object",
          "properties": {
            "receiptCode": {
              "type": "string",
              "description": "Unique receipt code",
              "example": "VRC-2023-ABC123"
            },
            "electionId": {
              "type": "string",
              "format": "uuid",
              "description": "Election ID",
              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
            },
            "electionName": {
              "type": "string",
              "description": "Election name",
              "example": "Presidential Election 2023"
            },
            "voteTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "When the vote was cast",
              "example": "2023-02-25T10:30:00Z"
            },
            "pollingUnit": {
              "type": "string",
              "description": "Polling unit name",
              "example": "Central Primary School"
            },
            "voteHash": {
              "type": "string",
              "description": "Cryptographic hash of the vote",
              "example": "a1b2c3d4e5f6789012345678901234567890abcdef"
            },
            "isVerified": {
              "type": "boolean",
              "description": "Whether the vote is verified on blockchain",
              "example": true
            },
            "blockchainTxId": {
              "type": "string",
              "description": "Blockchain transaction ID (if applicable)",
              "example": "0x1234567890abcdef"
            }
          }
        }
      },
      "parameters": {
        "PageParam": {
          "name": "page",
          "in": "query",
          "schema": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          },
          "description": "Page number for pagination"
        },
        "LimitParam": {
          "name": "limit",
          "in": "query",
          "schema": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 20
          },
          "description": "Number of items per page"
        },
        "ElectionIdParam": {
          "name": "electionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "Election unique identifier",
          "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
        },
        "UserIdParam": {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "User unique identifier",
          "example": "u1s2e3r4-i5d6-7890-abcd-ef1234567890"
        }
      },
      "responses": {
        "UnauthorizedResponse": {
          "description": "Unauthorized - Invalid or missing authentication token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnauthorizedError"
              }
            }
          }
        },
        "ForbiddenResponse": {
          "description": "Forbidden - Insufficient permissions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForbiddenError"
              }
            }
          }
        },
        "NotFoundResponse": {
          "description": "Resource not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotFoundError"
              }
            }
          }
        },
        "ValidationErrorResponse": {
          "description": "Validation error - Invalid input data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationError"
              }
            }
          }
        },
        "ConflictResponse": {
          "description": "Conflict - Resource already exists",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConflictError"
              }
            }
          }
        },
        "ServerErrorResponse": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }
          }
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "tags": [
      {
        "name": "Authentication",
        "description": "API endpoints for user authentication"
      },
      {
        "name": "Voter Management",
        "description": "API endpoints for voter management"
      },
      {
        "name": "Elections",
        "description": "API endpoints for election management"
      },
      {
        "name": "Voting",
        "description": "API endpoints for casting votes"
      },
      {
        "name": "Results",
        "description": "API endpoints for election results"
      },
      {
        "name": "USSD",
        "description": "API endpoints for USSD integration"
      },
      {
        "name": "Mobile Integration",
        "description": "API endpoints for mobile application integration"
      },
      {
        "name": "System Administrator",
        "description": "API endpoints for system administration"
      },
      {
        "name": "Electoral Commissioner",
        "description": "API endpoints for electoral commissioners"
      },
      {
        "name": "Security",
        "description": "API endpoints for security monitoring"
      },
      {
        "name": "Admin Management",
        "description": "Admin user management endpoints"
      },
      {
        "name": "Security Officer",
        "description": "Security Officer specific endpoints"
      },
      {
        "name": "System Auditor",
        "description": "System Auditor specific endpoints"
      },
      {
        "name": "Verification",
        "description": "Voter verification management endpoints"
      },
      {
        "name": "Regional Management",
        "description": "Regional management endpoints"
      },
      {
        "name": "Election Results",
        "description": "Election results and statistics endpoints"
      },
      {
        "name": "Real-time Updates",
        "description": "Real-time election updates endpoints"
      },
      {
        "name": "Regional Results",
        "description": "Regional election results endpoints"
      },
      {
        "name": "Voter Profile",
        "description": "Voter profile management endpoints"
      },
      {
        "name": "Vote History",
        "description": "Voter's voting history endpoints"
      },
      {
        "name": "Polling Unit",
        "description": "Polling unit information endpoints"
      }
    ],
    "swaggerURL": "/api-docs.json",
    "paths": {
      "/api/v1/admin/users": {
        "get": {
          "summary": "Get all admin users (System Admin only)",
          "tags": [
            "Admin Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "role",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "SystemAdministrator",
                  "ElectoralCommissioner",
                  "SecurityOfficer",
                  "SystemAuditor",
                  "RegionalElectoralOfficer",
                  "ElectionManager",
                  "ResultVerificationOfficer"
                ]
              },
              "description": "Filter by admin role"
            },
            {
              "name": "status",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "active",
                  "inactive",
                  "all"
                ]
              },
              "description": "Filter by status"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number"
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 50
              },
              "description": "Items per page"
            }
          ],
          "responses": {
            "200": {
              "description": "List of admin users returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/AdminUser"
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "integer",
                            "example": 1
                          },
                          "limit": {
                            "type": "integer",
                            "example": 50
                          },
                          "total": {
                            "type": "integer",
                            "example": 25
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a System Admin"
            }
          }
        },
        "post": {
          "summary": "Create a new admin user (System Admin only)",
          "tags": [
            "Admin Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "email",
                    "fullName",
                    "phoneNumber",
                    "password",
                    "role"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "fullName": {
                      "type": "string"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "format": "password"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "SystemAdministrator",
                        "ElectoralCommissioner",
                        "SecurityOfficer",
                        "SystemAuditor",
                        "RegionalElectoralOfficer",
                        "ElectionManager",
                        "ResultVerificationOfficer"
                      ]
                    }
                  },
                  "$ref": "#/components/schemas/AdminUserCreate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Admin user created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Admin user created successfully"
                      },
                      "data": {
                        "$ref": "#/components/schemas/AdminUser"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a System Admin"
            },
            "409": {
              "description": "User with this email already exists"
            }
          }
        }
      },
      "/api/v1/admin/audit-logs": {
        "get": {
          "summary": "Get audit logs (Security Officer only)",
          "tags": [
            "Security Officer"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "userId",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Filter by user ID"
            },
            {
              "name": "actionType",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "Filter by action type"
            },
            {
              "name": "startDate",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "Filter from date"
            },
            {
              "name": "endDate",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "Filter to date"
            },
            {
              "name": "suspicious",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": 1
              },
              "description": "Filter suspicious activities only"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number"
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 50
              },
              "description": "Items per page"
            }
          ],
          "responses": {
            "200": {
              "description": "Audit logs retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/AuditLog"
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "integer",
                            "example": 1
                          },
                          "limit": {
                            "type": "integer",
                            "example": 50
                          },
                          "total": {
                            "type": "integer",
                            "example": 1000
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a Security Officer"
            }
          }
        }
      },
      "/api/v1/admin/elections": {
        "post": {
          "summary": "Create a new election",
          "tags": [
            "Electoral Commissioner"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "electionName",
                    "electionType",
                    "startDate",
                    "endDate"
                  ],
                  "properties": {
                    "electionName": {
                      "type": "string",
                      "example": "Presidential Election 2024"
                    },
                    "electionType": {
                      "type": "string",
                      "enum": [
                        "Presidential",
                        "Gubernatorial",
                        "Senatorial",
                        "HouseOfReps",
                        "StateAssembly",
                        "LocalGovernment"
                      ],
                      "example": "Presidential"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-02-25T08:00:00Z"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-02-25T18:00:00Z"
                    },
                    "description": {
                      "type": "string",
                      "example": "Nigeria Presidential Election for 2024"
                    },
                    "eligibilityRules": {
                      "type": "object",
                      "description": "Rules for voter eligibility"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Election created successfully"
            },
            "400": {
              "description": "Invalid input data"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Insufficient permissions"
            },
            "409": {
              "description": "Election with overlapping dates already exists"
            }
          }
        }
      },
      "/api/v1/admin/security-logs": {
        "get": {
          "summary": "Get security logs with filtering and pagination",
          "tags": [
            "Security Officer"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "severity",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "low",
                  "medium",
                  "high",
                  "critical"
                ]
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Security logs returned"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Insufficient permissions"
            }
          }
        }
      },
      "/api/v1/admin/results/publish": {
        "post": {
          "summary": "Publish election results",
          "tags": [
            "Electoral Commissioner",
            "Result Verification Officer"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "electionId"
                  ],
                  "properties": {
                    "electionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "publishLevel": {
                      "type": "string",
                      "enum": [
                        "preliminary",
                        "final"
                      ],
                      "default": "preliminary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Results published successfully"
            },
            "400": {
              "description": "Invalid input data or election not completed"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Insufficient permissions"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/admin/pending-verifications": {
        "get": {
          "summary": "Get pending voter verification requests (Voter Registration Officer only)",
          "tags": [
            "Verification"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number"
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 50
              },
              "description": "Items per page"
            }
          ],
          "responses": {
            "200": {
              "description": "List of pending verification requests returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VerificationRequest"
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "integer",
                            "example": 1
                          },
                          "limit": {
                            "type": "integer",
                            "example": 50
                          },
                          "total": {
                            "type": "integer",
                            "example": 25
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a Voter Registration Officer"
            }
          }
        }
      },
      "/api/v1/admin/approve-verification/{id}": {
        "post": {
          "summary": "Approve a voter verification request (Voter Registration Officer only)",
          "tags": [
            "Verification"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Verification request ID"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notes": {
                      "type": "string",
                      "example": "All documents verified successfully"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Verification request approved"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a Voter Registration Officer"
            },
            "404": {
              "description": "Verification request not found"
            }
          }
        }
      },
      "/api/v1/admin/reject-verification/{id}": {
        "post": {
          "summary": "Reject a voter verification request (Voter Registration Officer only)",
          "tags": [
            "Verification"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Verification request ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "reason"
                  ],
                  "properties": {
                    "reason": {
                      "type": "string",
                      "example": "Invalid NIN provided"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Verification request rejected"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a Voter Registration Officer"
            },
            "404": {
              "description": "Verification request not found"
            }
          }
        }
      },
      "/api/v1/admin/regions/{state}/polling-units": {
        "get": {
          "summary": "Get polling units in a region (Regional Officer only)",
          "tags": [
            "Regional Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "state",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "State name"
            },
            {
              "name": "lga",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 1
              },
              "description": "Filter by LGA"
            },
            {
              "name": "ward",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 50
              },
              "description": "Filter by ward"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number"
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 50
              },
              "description": "Items per page"
            },
            {
              "name": "ward",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Polling units retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/PollingUnit"
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "integer",
                            "example": 1
                          },
                          "limit": {
                            "type": "integer",
                            "example": 50
                          },
                          "total": {
                            "type": "integer",
                            "example": 150
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a Regional Officer"
            }
          }
        }
      },
      "/api/v1/admin/polling-units": {
        "post": {
          "summary": "Create a new polling unit (Regional Officer only)",
          "tags": [
            "Regional Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "pollingUnitName",
                    "pollingUnitCode",
                    "address",
                    "state",
                    "lga",
                    "ward"
                  ],
                  "properties": {
                    "pollingUnitName": {
                      "type": "string",
                      "example": "Central Primary School"
                    },
                    "pollingUnitCode": {
                      "type": "string",
                      "example": "PU001"
                    },
                    "address": {
                      "type": "string",
                      "example": "123 Main Street, Victoria Island"
                    },
                    "state": {
                      "type": "string",
                      "example": "Lagos"
                    },
                    "lga": {
                      "type": "string",
                      "example": "Ikeja"
                    },
                    "ward": {
                      "type": "string",
                      "example": "Ward 1"
                    },
                    "latitude": {
                      "type": "number",
                      "format": "float",
                      "example": 6.4281
                    },
                    "longitude": {
                      "type": "number",
                      "format": "float",
                      "example": 3.4219
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Polling unit created successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a Regional Officer"
            }
          }
        }
      },
      "/api/v1/admin/polling-units/{pollingUnitId}": {
        "put": {
          "summary": "Update polling unit (Regional Officer only)",
          "tags": [
            "Regional Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "pollingUnitId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Polling unit ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pollingUnitName": {
                      "type": "string",
                      "example": "Updated Primary School"
                    },
                    "address": {
                      "type": "string",
                      "example": "456 New Street, Victoria Island"
                    },
                    "latitude": {
                      "type": "number",
                      "format": "float",
                      "example": 6.4281
                    },
                    "longitude": {
                      "type": "number",
                      "format": "float",
                      "example": 3.4219
                    },
                    "isActive": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Polling unit updated successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a Regional Officer"
            },
            "404": {
              "description": "Polling unit not found"
            }
          }
        }
      },
      "/api/v1/admin/regions/{state}/statistics": {
        "get": {
          "summary": "Get regional statistics (Regional Officer only)",
          "tags": [
            "Regional Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "state",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "State name"
            },
            {
              "name": "electionId",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Filter by election ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Regional statistics retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "state": {
                            "type": "string",
                            "example": "Lagos"
                          },
                          "totalPollingUnits": {
                            "type": "integer",
                            "example": 150
                          },
                          "totalRegisteredVoters": {
                            "type": "integer",
                            "example": 500000
                          },
                          "totalVotesCast": {
                            "type": "integer",
                            "example": 350000
                          },
                          "turnoutPercentage": {
                            "type": "number",
                            "format": "float",
                            "example": 70
                          },
                          "lgaBreakdown": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "lga": {
                                  "type": "string",
                                  "example": "Ikeja"
                                },
                                "pollingUnits": {
                                  "type": "integer",
                                  "example": 25
                                },
                                "registeredVoters": {
                                  "type": "integer",
                                  "example": 75000
                                },
                                "votesCast": {
                                  "type": "integer",
                                  "example": 52500
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a Regional Officer"
            }
          }
        }
      },
      "/api/v1/auth/register": {
        "post": {
          "summary": "Register a new voter",
          "tags": [
            "Authentication"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "nin",
                    "vin",
                    "phoneNumber",
                    "dateOfBirth",
                    "password",
                    "fullName",
                    "pollingUnitCode",
                    "state",
                    "gender",
                    "lga",
                    "ward"
                  ],
                  "properties": {
                    "nin": {
                      "type": "string",
                      "description": "11-character National Identification Number",
                      "example": "12345678901"
                    },
                    "vin": {
                      "type": "string",
                      "description": "19-character Voter Identification Number",
                      "example": "1234567890123456789"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "Phone number for MFA",
                      "example": "+2348012345678"
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "format": "date",
                      "description": "Date of birth for verification",
                      "example": "1990-01-01"
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "User password"
                    },
                    "fullName": {
                      "type": "string",
                      "description": "Full name of the voter",
                      "example": "John Doe"
                    },
                    "pollingUnitCode": {
                      "type": "string",
                      "description": "Assigned polling unit code",
                      "example": "PU001"
                    },
                    "state": {
                      "type": "string",
                      "description": "State of residence",
                      "example": "Lagos"
                    },
                    "gender": {
                      "type": "string",
                      "enum": [
                        "male",
                        "female"
                      ],
                      "description": "Gender of the voter",
                      "example": "male"
                    },
                    "lga": {
                      "type": "string",
                      "description": "Local Government Area",
                      "example": "Ikeja"
                    },
                    "ward": {
                      "type": "string",
                      "description": "Ward within the LGA",
                      "example": "Ward 1"
                    }
                  },
                  "$ref": "#/components/schemas/VoterRegistration"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Voter registered successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Voter registered successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
                          },
                          "nin": {
                            "type": "string",
                            "example": "12345678901"
                          },
                          "vin": {
                            "type": "string",
                            "example": "1234567890123456789"
                          },
                          "phoneNumber": {
                            "type": "string",
                            "example": "+2348012345678"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "409": {
              "description": "Voter already exists",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/login": {
        "post": {
          "summary": "Login a voter",
          "tags": [
            "Authentication"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "identifier",
                    "password"
                  ],
                  "properties": {
                    "identifier": {
                      "type": "string",
                      "description": "NIN, VIN, or phone number",
                      "example": "12345678901"
                    },
                    "password": {
                      "type": "string",
                      "format": "password"
                    }
                  },
                  "$ref": "#/components/schemas/UserCredentials"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid credentials",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Account inactive",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/ussd/authenticate": {
        "post": {
          "summary": "Authenticate a voter via USSD",
          "tags": [
            "USSD Authentication"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "nin",
                    "vin",
                    "phoneNumber"
                  ],
                  "properties": {
                    "nin": {
                      "type": "string",
                      "example": "12345678901"
                    },
                    "vin": {
                      "type": "string",
                      "example": "1234567890123456789"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "example": "+2348012345678"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "USSD authentication successful"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Invalid credentials"
            }
          }
        }
      },
      "/api/v1/auth/ussd/verify-session": {
        "post": {
          "summary": "Verify USSD session and get token",
          "tags": [
            "USSD Authentication"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sessionCode"
                  ],
                  "properties": {
                    "sessionCode": {
                      "type": "string",
                      "example": "123456"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "USSD session verified"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Invalid or expired session"
            }
          }
        }
      },
      "/api/v1/auth/verify-mfa": {
        "post": {
          "summary": "Verify MFA token",
          "tags": [
            "Authentication"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "userId",
                    "token"
                  ],
                  "properties": {
                    "userId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "token": {
                      "type": "string",
                      "description": "6-digit MFA token",
                      "example": "123456"
                    }
                  },
                  "$ref": "#/components/schemas/MfaVerification"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "MFA verification successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "MFA verification successful"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid MFA token",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/setup-mfa": {
        "post": {
          "summary": "Set up MFA for a user",
          "tags": [
            "MFA"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "MFA setup information returned"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/auth/enable-mfa": {
        "post": {
          "summary": "Enable MFA after verification",
          "tags": [
            "MFA"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "token"
                  ],
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "6-digit MFA token",
                      "example": "123456"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "MFA enabled successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized or invalid token"
            }
          }
        }
      },
      "/api/v1/auth/disable-mfa": {
        "post": {
          "summary": "Disable MFA for a user",
          "tags": [
            "MFA"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "token"
                  ],
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "6-digit MFA token",
                      "example": "123456"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "MFA disabled successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized or invalid token"
            }
          }
        }
      },
      "/api/v1/auth/generate-backup-codes": {
        "post": {
          "summary": "Generate backup codes for MFA",
          "tags": [
            "MFA"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Backup codes generated successfully"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/auth/verify-backup-code": {
        "post": {
          "summary": "Verify a backup code for MFA",
          "tags": [
            "MFA"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "userId",
                    "backupCode"
                  ],
                  "properties": {
                    "userId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "backupCode": {
                      "type": "string",
                      "example": "ABC123"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Backup code verified successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Invalid backup code"
            }
          }
        }
      },
      "/api/v1/auth/refresh-token": {
        "post": {
          "summary": "Refresh authentication token",
          "tags": [
            "Authentication"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Token refreshed successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Token refreshed successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/logout": {
        "post": {
          "summary": "Logout user",
          "tags": [
            "Authentication"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Logout successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Logout successful"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/forgot-password": {
        "post": {
          "summary": "Request password reset",
          "tags": [
            "Authentication"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  },
                  "$ref": "#/components/schemas/ForgotPassword"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password reset email sent",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Password reset instructions sent to your email"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Email not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/reset-password": {
        "post": {
          "summary": "Reset password with token",
          "tags": [
            "Authentication"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "token",
                    "newPassword"
                  ],
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "newPassword": {
                      "type": "string",
                      "format": "password"
                    }
                  },
                  "$ref": "#/components/schemas/ResetPassword"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password reset successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Password reset successful"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or expired token",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/admin-login": {
        "post": {
          "summary": "Login as an admin",
          "tags": [
            "Authentication"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "email",
                    "password"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "Admin password"
                    }
                  },
                  "$ref": "#/components/schemas/AdminCredentials"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Admin login successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Login successful"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "example": "admin@example.com"
                              },
                              "fullName": {
                                "type": "string",
                                "example": "Admin User"
                              },
                              "role": {
                                "type": "string",
                                "example": "admin"
                              }
                            }
                          },
                          "requiresMfa": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid credentials",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Account inactive",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/elections": {
        "get": {
          "summary": "Get all elections",
          "tags": [
            "Elections"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "draft",
                  "scheduled",
                  "active",
                  "completed",
                  "cancelled"
                ],
                "default": "active"
              },
              "description": "Filter by election status"
            },
            {
              "name": "type",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "presidential",
                  "gubernatorial",
                  "senate",
                  "house",
                  "local"
                ]
              },
              "description": "Filter by election type"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of elections",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Election"
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Retrieve a list of all elections"
        },
        "post": {
          "summary": "Create new election",
          "description": "Create a new election (admin only)",
          "tags": [
            "Elections"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Election"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Election created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Election created successfully"
                      },
                      "data": {
                        "$ref": "#/components/schemas/Election"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden - requires admin privileges",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/elections/{id}": {
        "get": {
          "summary": "Get election by ID",
          "tags": [
            "Elections"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Election ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Election details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Election"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Election not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Retrieve detailed information about an election"
        },
        "put": {
          "summary": "Update election",
          "description": "Update an existing election (admin only)",
          "tags": [
            "Elections"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Election ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Election"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Election updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Election updated successfully"
                      },
                      "data": {
                        "$ref": "#/components/schemas/Election"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden - requires admin privileges",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Election not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Delete election",
          "description": "Delete an election (admin only)",
          "tags": [
            "Elections"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Election ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Election deleted successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Election deleted successfully"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden - requires admin privileges",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Election not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/elections/{electionId}/dashboard": {
        "get": {
          "summary": "Get comprehensive election dashboard data",
          "tags": [
            "Elections"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Election dashboard data returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "example": "ELECTION_DASHBOARD_RETRIEVED"
                      },
                      "message": {
                        "type": "string",
                        "example": "Election dashboard data retrieved successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "overview": {
                            "type": "object",
                            "description": "Overview statistics and election info"
                          },
                          "candidates": {
                            "type": "object",
                            "description": "Candidates data and comparison"
                          },
                          "statistics": {
                            "type": "object",
                            "description": "Detailed statistics by region, age, gender"
                          },
                          "liveUpdates": {
                            "type": "array",
                            "description": "Live election updates and announcements"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/elections/{electionId}/candidates": {
        "get": {
          "summary": "Get all candidates for an election",
          "tags": [
            "Candidates"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "search",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of candidates returned"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Election not found"
            }
          }
        },
        "post": {
          "summary": "Create a new candidate for an election (admin only)",
          "tags": [
            "Candidates"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "fullName",
                    "partyAffiliation",
                    "position"
                  ],
                  "properties": {
                    "fullName": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "partyAffiliation": {
                      "type": "string",
                      "example": "Democratic Party"
                    },
                    "position": {
                      "type": "string",
                      "example": "President"
                    },
                    "biography": {
                      "type": "string",
                      "example": "John Doe is a seasoned politician..."
                    },
                    "photoUrl": {
                      "type": "string",
                      "example": "https://example.com/photo.jpg"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Candidate created successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not an admin"
            }
          }
        }
      },
      "/api/v1/elections/{id}/vote": {
        "post": {
          "summary": "Cast a vote in an election",
          "tags": [
            "Voting"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "candidateId"
                  ],
                  "properties": {
                    "candidateId": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Vote cast successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Already voted or ineligible"
            },
            "404": {
              "description": "Election or candidate not found"
            }
          }
        }
      },
      "/api/v1/elections/{id}/voting-status": {
        "get": {
          "summary": "Check if voter has already voted in an election",
          "tags": [
            "Voting"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Voting status returned"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/elections/{electionId}/offline-package": {
        "get": {
          "summary": "Generate offline voting package",
          "tags": [
            "Offline Voting"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Offline voting package generated successfully"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Voter not eligible"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/elections/{electionId}/submit-offline": {
        "post": {
          "summary": "Submit offline votes",
          "tags": [
            "Offline Voting"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "encryptedVotes",
                    "signature",
                    "keyId"
                  ],
                  "properties": {
                    "encryptedVotes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "candidateId",
                          "encryptedVote"
                        ],
                        "properties": {
                          "candidateId": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "encryptedVote": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "signature": {
                      "type": "string"
                    },
                    "keyId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Offline votes submitted successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/elections/{electionId}/offline-votes/{receiptCode}": {
        "get": {
          "summary": "Verify offline vote status",
          "tags": [
            "Offline Voting"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "receiptCode",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Vote verified successfully"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Receipt code not found"
            }
          }
        }
      },
      "/api/v1/mobile/auth/login": {
        "post": {
          "summary": "Login from mobile app",
          "tags": [
            "Mobile Integration"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "nin",
                    "vin",
                    "password"
                  ],
                  "properties": {
                    "nin": {
                      "type": "string"
                    },
                    "vin": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "deviceInfo": {
                      "type": "object",
                      "properties": {
                        "deviceId": {
                          "type": "string"
                        },
                        "deviceModel": {
                          "type": "string"
                        },
                        "osVersion": {
                          "type": "string"
                        },
                        "appVersion": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "$ref": "#/components/schemas/MobileLogin"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "JWT token for authenticated requests"
                      },
                      "verificationRequired": {
                        "type": "boolean",
                        "description": "Whether device verification is required"
                      },
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Login successful"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
                              },
                              "nin": {
                                "type": "string",
                                "example": "12345678901"
                              }
                            }
                          },
                          "deviceVerified": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid credentials",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Account inactive",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Authenticate mobile app user and validate device information"
        }
      },
      "/api/v1/mobile/auth/request-device-verification": {
        "post": {
          "summary": "Request device verification code",
          "tags": [
            "Mobile Integration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deviceId"
                  ],
                  "properties": {
                    "deviceId": {
                      "type": "string",
                      "description": "Unique identifier for the device"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Verification code sent successfully"
            },
            "400": {
              "description": "Invalid device ID"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/mobile/auth/verify-device": {
        "post": {
          "summary": "Verify mobile device",
          "tags": [
            "Mobile Integration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deviceId",
                    "verificationCode"
                  ],
                  "properties": {
                    "deviceId": {
                      "type": "string",
                      "description": "Unique identifier for the device"
                    },
                    "verificationCode": {
                      "type": "string",
                      "description": "6-digit verification code sent to the user's phone"
                    }
                  },
                  "$ref": "#/components/schemas/DeviceVerification"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Device verified successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "JWT token for authenticated requests"
                      },
                      "verified": {
                        "type": "boolean",
                        "description": "Whether the device was verified"
                      },
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Device verified successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid verification code",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Device not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Verify mobile device with verification code sent via SMS"
        }
      },
      "/api/v1/mobile/vote/offline-package": {
        "get": {
          "summary": "Get offline voting package",
          "tags": [
            "Mobile Integration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "ID of the election",
              "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
            }
          ],
          "responses": {
            "200": {
              "description": "Offline voting package",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "election": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
                              },
                              "name": {
                                "type": "string",
                                "example": "Presidential Election 2023"
                              }
                            }
                          },
                          "candidates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "b2c3d4e5-f6a7-8901-bcde-f1234567890a"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "John Doe"
                                },
                                "party": {
                                  "type": "string",
                                  "example": "National Party"
                                }
                              }
                            }
                          },
                          "publicKey": {
                            "type": "string",
                            "description": "Server public key for encryption",
                            "example": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe..."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Insufficient permissions"
            },
            "404": {
              "description": "Election not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Download election data for offline voting"
        }
      },
      "/api/v1/mobile/vote/submit-offline": {
        "post": {
          "summary": "Submit offline votes",
          "tags": [
            "Mobile Integration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "encryptedVotes",
                    "signature"
                  ],
                  "properties": {
                    "encryptedVotes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "candidateId",
                          "encryptedVote"
                        ],
                        "properties": {
                          "candidateId": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "encryptedVote": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "signature": {
                      "type": "string"
                    }
                  },
                  "$ref": "#/components/schemas/OfflineVoteSubmission"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Votes submitted successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Offline votes submitted successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "acceptedCount": {
                            "type": "integer",
                            "example": 5
                          },
                          "rejectedCount": {
                            "type": "integer",
                            "example": 0
                          },
                          "receiptCodes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "a1b2c3d4e5f6g7h8"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters or votes",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Device not verified",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Submit votes collected while offline"
        }
      },
      "/api/v1/mobile/polling-units/nearby": {
        "get": {
          "summary": "Find nearby polling units",
          "tags": [
            "Mobile Integration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "latitude",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number",
                "format": "float"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number",
                "format": "float"
              }
            },
            {
              "name": "radius",
              "in": "query",
              "schema": {
                "type": "number",
                "default": 5
              }
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of nearby polling units returned"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/mobile/my-polling-unit": {
        "get": {
          "summary": "Get user's assigned polling unit",
          "tags": [
            "Mobile Integration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "User's polling unit information",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "pollingUnit": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "code": {
                                "type": "string"
                              },
                              "address": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "lga": {
                                "type": "string"
                              },
                              "ward": {
                                "type": "string"
                              },
                              "latitude": {
                                "type": "number"
                              },
                              "longitude": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Polling unit not found"
            }
          }
        }
      },
      "/api/v1/mobile/sync": {
        "post": {
          "summary": "Synchronize data between mobile app and server",
          "tags": [
            "Mobile Integration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "elections",
                        "candidates",
                        "pollingUnits",
                        "profile"
                      ]
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Data synchronized successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/mobile/elections/{electionId}": {
        "get": {
          "summary": "Get detailed election information for mobile app",
          "tags": [
            "Mobile Integration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Detailed election information returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "election": {
                            "type": "object"
                          },
                          "candidates": {
                            "type": "array"
                          },
                          "eligibility": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid election ID"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/mobile/vote/{electionId}": {
        "post": {
          "summary": "Cast vote from mobile app",
          "tags": [
            "Mobile Integration"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "candidateId",
                    "encryptedVote",
                    "signature"
                  ],
                  "properties": {
                    "candidateId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID of the candidate being voted for"
                    },
                    "encryptedVote": {
                      "type": "string",
                      "description": "Encrypted vote data"
                    },
                    "signature": {
                      "type": "string",
                      "description": "Digital signature to verify vote integrity"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Vote cast successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "voteId": {
                            "type": "string"
                          },
                          "receiptCode": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input or vote casting error"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Voter not eligible or has already voted"
            },
            "404": {
              "description": "Election or candidate not found"
            }
          }
        }
      },
      "/api/v1/results/live/{electionId}": {
        "get": {
          "summary": "Get real-time election results",
          "tags": [
            "Results"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Results returned"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/results/statistics/{electionId}": {
        "get": {
          "summary": "Get comprehensive election statistics",
          "tags": [
            "Statistics"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Statistics returned"
            },
            "400": {
              "description": "Error retrieving statistics"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/results/elections/{electionId}": {
        "get": {
          "summary": "Get detailed election results",
          "tags": [
            "Results"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "includePollingUnitBreakdown",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Results returned"
            },
            "400": {
              "description": "Error retrieving results"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/results/live": {
        "get": {
          "summary": "Get real-time voting statistics across all active elections",
          "tags": [
            "Statistics"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Real-time statistics returned"
            },
            "400": {
              "description": "Error retrieving statistics"
            }
          }
        }
      },
      "/api/v1/results/region/{electionId}": {
        "get": {
          "summary": "Get election results by region",
          "tags": [
            "Results"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "regionId",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Results by region returned"
            },
            "404": {
              "description": "Election not found"
            }
          }
        }
      },
      "/api/v1/ussd/start": {
        "post": {
          "summary": "Initiate USSD voting session",
          "tags": [
            "USSD"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "nin",
                    "vin",
                    "phoneNumber"
                  ],
                  "properties": {
                    "nin": {
                      "type": "string",
                      "example": "12345678901"
                    },
                    "vin": {
                      "type": "string",
                      "example": "1234567890123456789"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "example": "+2348012345678"
                    }
                  },
                  "$ref": "#/components/schemas/UssdAuthentication"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "USSD session started successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "USSD session started. Code sent via SMS"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "sessionId": {
                            "type": "string",
                            "format": "uuid",
                            "example": "c3d4e5f6-a7b8-9012-cdef-ghijklmnopqr"
                          },
                          "expiryTime": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-06-01T12:30:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication failed",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Too many attempts",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Start a USSD voting session by authenticating with NIN, VIN, and phone number"
        }
      },
      "/api/v1/ussd/vote": {
        "post": {
          "summary": "Cast vote via USSD",
          "tags": [
            "USSD"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sessionCode",
                    "electionId",
                    "candidateId"
                  ],
                  "properties": {
                    "sessionCode": {
                      "type": "string",
                      "example": "123456"
                    },
                    "electionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "candidateId": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "$ref": "#/components/schemas/UssdVote"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Vote cast successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Vote cast successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "receiptCode": {
                            "type": "string",
                            "example": "a1b2c3d4e5f6g7h8"
                          },
                          "electionName": {
                            "type": "string",
                            "example": "Presidential Election 2023"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-06-01T12:35:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid session",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Already voted or session expired",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Submit a vote using a valid USSD session code"
        }
      },
      "/api/v1/ussd/session-status": {
        "get": {
          "summary": "Check USSD session status",
          "tags": [
            "USSD"
          ],
          "parameters": [
            {
              "name": "sessionCode",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Temporary session code",
              "example": "123456"
            }
          ],
          "responses": {
            "200": {
              "description": "Session status",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "isValid": {
                            "type": "boolean",
                            "example": true
                          },
                          "remainingTimeSeconds": {
                            "type": "integer",
                            "example": 450
                          },
                          "elections": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Presidential Election 2023"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Session not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Check if a USSD session is still valid and get remaining time"
        }
      },
      "/api/v1/ussd/verify-vote": {
        "post": {
          "summary": "Verify a vote using receipt code",
          "tags": [
            "USSD"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "receiptCode",
                    "phoneNumber"
                  ],
                  "properties": {
                    "receiptCode": {
                      "type": "string",
                      "example": "a1b2c3d4e5f6g7h8"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "example": "+2348012345678"
                    }
                  },
                  "$ref": "#/components/schemas/UssdVoteVerification"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Vote verification result",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "verified": {
                            "type": "boolean",
                            "example": true
                          },
                          "electionName": {
                            "type": "string",
                            "example": "Presidential Election 2023"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-06-01T12:35:00Z"
                          },
                          "vote": {
                            "type": "object",
                            "properties": {
                              "hash": {
                                "type": "string",
                                "example": "d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Vote not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Validate that a vote was successfully recorded using the receipt code"
        }
      },
      "/api/v1/ussd/menu": {
        "post": {
          "summary": "Handle USSD menu navigation",
          "tags": [
            "USSD"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sessionId",
                    "selection"
                  ],
                  "properties": {
                    "sessionId": {
                      "type": "string",
                      "example": "123456"
                    },
                    "selection": {
                      "type": "string",
                      "example": "1"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Menu navigation processed"
            },
            "400": {
              "description": "Invalid input"
            },
            "404": {
              "description": "Session not found"
            }
          }
        }
      },
      "/api/v1/ussd/end": {
        "post": {
          "summary": "End USSD session",
          "tags": [
            "USSD"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sessionId"
                  ],
                  "properties": {
                    "sessionId": {
                      "type": "string",
                      "example": "123456"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Session ended successfully"
            },
            "404": {
              "description": "Session not found"
            }
          }
        }
      },
      "/api/v1/voter/profile": {
        "get": {
          "summary": "Get voter profile",
          "tags": [
            "Voter Profile"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Voter profile retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/VoterProfile"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - Invalid or missing token",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Voter profile not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Retrieve the authenticated voter's profile information"
        },
        "put": {
          "summary": "Update voter profile",
          "tags": [
            "Voter Profile"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phoneNumber": {
                      "type": "string",
                      "example": "+2348012345678"
                    }
                  },
                  "$ref": "#/components/schemas/VoterUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Profile updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Profile updated successfully"
                      },
                      "data": {
                        "$ref": "#/components/schemas/VoterProfile"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Voter not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Update the authenticated voter's profile information (limited fields)"
        }
      },
      "/api/v1/voter/change-password": {
        "put": {
          "summary": "Change voter password",
          "tags": [
            "Voter Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "currentPassword",
                    "newPassword"
                  ],
                  "properties": {
                    "currentPassword": {
                      "type": "string",
                      "format": "password"
                    },
                    "newPassword": {
                      "type": "string",
                      "format": "password"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password changed successfully"
            },
            "400": {
              "description": "Invalid input or current password incorrect"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        },
        "post": {
          "summary": "Change voter password",
          "description": "Change the authenticated voter's password",
          "tags": [
            "Voter Profile"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "currentPassword",
                    "newPassword",
                    "confirmPassword"
                  ],
                  "properties": {
                    "currentPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Current password",
                      "example": "currentPassword123"
                    },
                    "newPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "New password (minimum 8 characters)",
                      "example": "newSecurePassword456"
                    },
                    "confirmPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Confirm new password",
                      "example": "newSecurePassword456"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password changed successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Password changed successfully"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input (passwords don't match, weak password, etc.)",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized or incorrect current password",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/voter/polling-unit": {
        "get": {
          "summary": "Get voter's assigned polling unit",
          "tags": [
            "Polling Unit"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Polling unit information retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/PollingUnitInfo"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Polling unit not found or not assigned",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Retrieve information about the voter's assigned polling unit"
        }
      },
      "/api/v1/voter/polling-units": {
        "get": {
          "summary": "Get all polling units with pagination and filtering",
          "tags": [
            "Polling Units"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "regionId",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "search",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of polling units returned"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/voter/polling-units/{id}": {
        "get": {
          "summary": "Get polling unit by ID",
          "tags": [
            "Polling Units"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Polling unit returned"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Polling unit not found"
            }
          }
        }
      },
      "/api/v1/voter/polling-units/nearby": {
        "get": {
          "summary": "Get nearby polling units based on coordinates",
          "tags": [
            "Polling Units"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "latitude",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number",
                "format": "float"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number",
                "format": "float"
              }
            },
            {
              "name": "radius",
              "in": "query",
              "schema": {
                "type": "number",
                "default": 5
              }
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of nearby polling units returned"
            },
            "400": {
              "description": "Missing coordinates"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/voter/verification-status": {
        "get": {
          "summary": "Get voter verification status",
          "tags": [
            "Verification"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Verification status returned"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Verification status not found"
            }
          }
        }
      },
      "/api/v1/voter/submit-verification": {
        "post": {
          "summary": "Submit verification request",
          "tags": [
            "Verification"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "documentType",
                    "documentNumber",
                    "documentImageUrl"
                  ],
                  "properties": {
                    "documentType": {
                      "type": "string",
                      "example": "NIN"
                    },
                    "documentNumber": {
                      "type": "string",
                      "example": "12345678901"
                    },
                    "documentImageUrl": {
                      "type": "string",
                      "example": "https://example.com/document.jpg"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Verification request submitted"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/voter/eligibility/{electionId}": {
        "get": {
          "summary": "Check voter eligibility for an election",
          "tags": [
            "Voter Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Eligibility status returned"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/voter/vote-history": {
        "get": {
          "summary": "Get voter's voting history",
          "tags": [
            "Vote History"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Vote history retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VoteHistory"
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "integer",
                            "example": 1
                          },
                          "limit": {
                            "type": "integer",
                            "example": 20
                          },
                          "total": {
                            "type": "integer",
                            "example": 5
                          },
                          "totalPages": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Retrieve the authenticated voter's complete voting history",
          "parameters": [
            {
              "name": "electionType",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Presidential",
                  "Gubernatorial",
                  "Senatorial",
                  "HouseOfReps",
                  "StateAssembly",
                  "LocalGovernment"
                ]
              },
              "description": "Filter by election type"
            },
            {
              "name": "year",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Filter by election year",
              "example": 2023
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number for pagination"
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 20
              },
              "description": "Number of records per page"
            }
          ]
        }
      },
      "/api/v1/voter/verify-vote/{receiptCode}": {
        "get": {
          "summary": "Verify a vote using receipt code",
          "tags": [
            "Vote History"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "receiptCode",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Vote receipt code to verify",
              "example": "VRC-2023-ABC123"
            }
          ],
          "responses": {
            "200": {
              "description": "Vote verification result",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/VoteReceipt"
                      },
                      "verification": {
                        "type": "object",
                        "properties": {
                          "isValid": {
                            "type": "boolean",
                            "example": true
                          },
                          "verificationTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-02-25T10:35:00Z"
                          },
                          "blockchainConfirmed": {
                            "type": "boolean",
                            "example": true
                          },
                          "message": {
                            "type": "string",
                            "example": "Vote successfully verified on blockchain"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid receipt code format",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Vote receipt not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": false
                      },
                      "error": {
                        "type": "string",
                        "example": "Vote receipt not found"
                      },
                      "verification": {
                        "type": "object",
                        "properties": {
                          "isValid": {
                            "type": "boolean",
                            "example": false
                          },
                          "message": {
                            "type": "string",
                            "example": "Receipt code does not exist in our records"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "description": "Verify that a vote was properly recorded using the receipt code"
        }
      },
      "/api/v1/voter/report-vote-issue": {
        "post": {
          "summary": "Report an issue with a vote",
          "tags": [
            "Voting"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "voteId",
                    "issueType",
                    "description"
                  ],
                  "properties": {
                    "voteId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "issueType": {
                      "type": "string",
                      "enum": [
                        "technical",
                        "fraud",
                        "coercion",
                        "other"
                      ]
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Issue reported successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/voter/verify-identity": {
        "post": {
          "summary": "Verify voter identity",
          "tags": [
            "Voter Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "documentType",
                    "documentNumber",
                    "documentImage"
                  ],
                  "properties": {
                    "documentType": {
                      "type": "string",
                      "enum": [
                        "nationalId",
                        "passport",
                        "driversLicense"
                      ]
                    },
                    "documentNumber": {
                      "type": "string"
                    },
                    "documentImage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Identity verified successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/voter/verify-address": {
        "post": {
          "summary": "Verify voter address",
          "tags": [
            "Voter Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "addressLine1",
                    "city",
                    "state",
                    "postalCode",
                    "proofDocument"
                  ],
                  "properties": {
                    "addressLine1": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "postalCode": {
                      "type": "string"
                    },
                    "proofDocument": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Address verified successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/voter/voting-history": {
        "get": {
          "summary": "Get voter's voting history",
          "tags": [
            "Voter Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Voting history returned"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/admin/users/{id}": {
        "get": {
          "summary": "Get admin user by ID (System Admin only)",
          "tags": [
            "Admin Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Admin user ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Admin user details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/AdminUser"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a System Admin"
            },
            "404": {
              "description": "Admin user not found"
            }
          }
        },
        "put": {
          "summary": "Update admin user (System Admin only)",
          "tags": [
            "Admin Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Admin user ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fullName": {
                      "type": "string",
                      "example": "John Updated Admin"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "example": "+2348012345679"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "SystemAdministrator",
                        "ElectoralCommissioner",
                        "SecurityOfficer",
                        "SystemAuditor",
                        "RegionalElectoralOfficer",
                        "ElectionManager",
                        "ResultVerificationOfficer"
                      ],
                      "example": "SecurityOfficer"
                    },
                    "isActive": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Admin user updated successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a System Admin"
            },
            "404": {
              "description": "Admin user not found"
            }
          }
        },
        "delete": {
          "summary": "Delete admin user (System Admin only)",
          "tags": [
            "Admin Management"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Admin user ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Admin user deleted successfully"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a System Admin"
            },
            "404": {
              "description": "Admin user not found"
            }
          }
        }
      },
      "/api/v1/admin/elections/{id}/candidates": {
        "post": {
          "summary": "Add candidate to election",
          "tags": [
            "Electoral Commissioner"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Election ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "fullName",
                    "partyCode",
                    "partyName"
                  ],
                  "properties": {
                    "fullName": {
                      "type": "string",
                      "example": "John Presidential Candidate"
                    },
                    "partyCode": {
                      "type": "string",
                      "example": "APC"
                    },
                    "partyName": {
                      "type": "string",
                      "example": "All Progressives Congress"
                    },
                    "bio": {
                      "type": "string",
                      "example": "Experienced politician with 20 years of service"
                    },
                    "photoUrl": {
                      "type": "string",
                      "example": "https://example.com/candidate-photo.jpg"
                    },
                    "position": {
                      "type": "string",
                      "example": "President"
                    },
                    "manifesto": {
                      "type": "string",
                      "example": "Our vision for a better Nigeria"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Candidate added successfully"
            },
            "400": {
              "description": "Invalid input data"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Insufficient permissions"
            },
            "404": {
              "description": "Election not found"
            },
            "409": {
              "description": "Candidate already exists for this party"
            }
          }
        }
      },
      "/api/v1/admin/security/suspicious-activities": {
        "get": {
          "summary": "Get suspicious activities (Security Officer only)",
          "tags": [
            "Security Officer"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "severity",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "low",
                  "medium",
                  "high",
                  "critical"
                ]
              },
              "description": "Filter by severity level"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number"
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 50
              },
              "description": "Items per page"
            }
          ],
          "responses": {
            "200": {
              "description": "Suspicious activities retrieved successfully"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden - Not a Security Officer"
            }
          }
        }
      },
      "/api/v1/elections/{id}/candidates": {
        "get": {
          "summary": "Get candidates for an election",
          "description": "Retrieve all candidates for a specific election",
          "tags": [
            "Elections"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Election ID"
            }
          ],
          "responses": {
            "200": {
              "description": "List of candidates",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Candidate"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Election not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/elections/{id}/results": {
        "get": {
          "summary": "Get election results",
          "description": "Retrieve results for a completed election",
          "tags": [
            "Elections"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Election ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Election results",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/ElectionResults"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden - Election results not yet available",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Election not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/results/elections/{electionId}/statistics": {
        "get": {
          "summary": "Get election statistics",
          "description": "Retrieve comprehensive statistics for a specific election",
          "tags": [
            "Election Results"
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Election ID",
              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
            },
            {
              "name": "includeRegional",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": false
              },
              "description": "Include regional breakdown in results"
            },
            {
              "name": "includeCandidates",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true
              },
              "description": "Include candidate results"
            }
          ],
          "responses": {
            "200": {
              "description": "Election statistics retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/ElectionStatistics"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid election ID format",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Election not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/results/elections/{electionId}/real-time": {
        "get": {
          "summary": "Get real-time election updates",
          "description": "Retrieve real-time updates for an ongoing election",
          "tags": [
            "Real-time Updates"
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Election ID",
              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
            },
            {
              "name": "includeRecent",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true
              },
              "description": "Include recent polling unit updates"
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 10,
                "minimum": 1,
                "maximum": 50
              },
              "description": "Number of recent updates to include"
            }
          ],
          "responses": {
            "200": {
              "description": "Real-time updates retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/RealTimeUpdate"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid election ID or parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Election not found or not active",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/results/elections/{electionId}/regions/{region}": {
        "get": {
          "summary": "Get regional election statistics",
          "description": "Retrieve detailed statistics for a specific region in an election",
          "tags": [
            "Regional Results"
          ],
          "parameters": [
            {
              "name": "electionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Election ID",
              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
            },
            {
              "name": "region",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Region name (state)",
              "example": "Lagos"
            },
            {
              "name": "includeLGA",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true
              },
              "description": "Include LGA breakdown"
            },
            {
              "name": "includeWards",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": false
              },
              "description": "Include ward-level breakdown"
            }
          ],
          "responses": {
            "200": {
              "description": "Regional statistics retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/RegionalStatistics"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Election or region not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/results/elections": {
        "get": {
          "summary": "Get results for all elections",
          "description": "Retrieve a summary of results for all elections",
          "tags": [
            "Election Results"
          ],
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "completed",
                  "active",
                  "all"
                ],
                "default": "completed"
              },
              "description": "Filter elections by status"
            },
            {
              "name": "electionType",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Presidential",
                  "Gubernatorial",
                  "Senatorial",
                  "HouseOfReps",
                  "StateAssembly",
                  "LocalGovernment"
                ]
              },
              "description": "Filter by election type"
            },
            {
              "name": "year",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Filter by election year",
              "example": 2023
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number for pagination"
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer",
                "default": 20
              },
              "description": "Number of elections per page"
            }
          ],
          "responses": {
            "200": {
              "description": "Election results retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "electionId": {
                              "type": "string",
                              "format": "uuid",
                              "example": "e1l2e3c4-t5i6-7890-abcd-ef1234567890"
                            },
                            "electionName": {
                              "type": "string",
                              "example": "Presidential Election 2023"
                            },
                            "electionType": {
                              "type": "string",
                              "example": "Presidential"
                            },
                            "status": {
                              "type": "string",
                              "example": "completed"
                            },
                            "totalVotesCast": {
                              "type": "integer",
                              "example": 28000000
                            },
                            "turnoutPercentage": {
                              "type": "number",
                              "format": "float",
                              "example": 29.47
                            },
                            "winner": {
                              "type": "object",
                              "properties": {
                                "candidateName": {
                                  "type": "string",
                                  "example": "John Presidential Candidate"
                                },
                                "partyName": {
                                  "type": "string",
                                  "example": "All Progressives Congress"
                                },
                                "votes": {
                                  "type": "integer",
                                  "example": 15000000
                                },
                                "percentage": {
                                  "type": "number",
                                  "format": "float",
                                  "example": 54.55
                                }
                              }
                            },
                            "completedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2023-02-25T18:00:00Z"
                            }
                          }
                        }
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "integer",
                            "example": 1
                          },
                          "limit": {
                            "type": "integer",
                            "example": 20
                          },
                          "total": {
                            "type": "integer",
                            "example": 5
                          },
                          "totalPages": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/voter/deactivate-account": {
        "post": {
          "summary": "Deactivate voter account",
          "description": "Deactivate the authenticated voter's account (can be reactivated by admin)",
          "tags": [
            "Voter Profile"
          ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "password",
                    "reason"
                  ],
                  "properties": {
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "Current password for confirmation",
                      "example": "currentPassword123"
                    },
                    "reason": {
                      "type": "string",
                      "description": "Reason for deactivation",
                      "example": "Moving to another state"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Account deactivated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Account deactivated successfully"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized or incorrect password",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  }